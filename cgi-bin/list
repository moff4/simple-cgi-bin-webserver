#!/usr/bin/env python3

import cgi
from typing import List, Tuple, Optional, Any

import psycopg2


print('Content-Type: text/html')
print('')

template = """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>List</title>
</head>
<body>
  <h1>Users</h1>
  <p>{users}</p>
  <form method="POST" action="/cgi-bin/list">
    <label>Age:</label>
    <input type="text" name="age"/>
    <label>Name:</label>
    <input type="text" name="name"/>

    <br>
    <input type="submit">
  </form>
</body>
</html>
"""

CONNECTION = psycopg2.connect("dbname=postgres user=postgres password=postgres host=localhost port=5432"),


def _get_rows(connection: Any, age: Optional[str], name: Optional[str]) -> List[Tuple[int]]:
    cursor = connection.cursor()

    if not age or not name:
        raise ValueError('name or age not passed')

    cursor.callproc('INSERT_NEW_ROW', [name, age])

    # "commit" and "start transaction" cannot be used in stored procedures because of
    # https://stackoverflow.com/questions/59159091/invalid-transaction-termination#59159476
    connection.commit()
    result = cursor.fetchall()
    rows = list(result)
    cursor.close()
    return rows


def get_rows(age: Optional[str], name: Optional[str]) -> List[Tuple[int]]:
    with CONNECTION:
        return _get_rows(connection=CONNECTION, age=age, name=name)


def handle_post() -> None:
    x = cgi.FieldStorage()
    params = {
        i.name: i.value
        for i in x.list
    }
    name = params['name'] if 'name' in params else None
    age = params['age'] if 'age' in params else None
    rows = get_rows(age=age, name=name)
    print(
        template.format(
            users='</p>\n<p>'.join(
                [
                    'Добаввлен {} ({} y.o.) # {}'.format(name, age, row[0])
                    for row in rows
                ]
            )
        )
    )


def handle_request() -> None:
    handle_post()


handle_request()
